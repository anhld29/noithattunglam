@charset "utf-8";
@import "compass";
$experimental-support-for-svg: true;

//----------------------------------------------//
// *Media Queries								//
//----------------------------------------------//
$bp_tab: 1024px; //tab
$bp_sp: 767px; //sp

@mixin mq($device,$val:null,$val2:null) {
	@if $device == pc {
	//pc
		@media only screen and (min-width: $bp_tab + 1){@content;}
		@media print {@content;}
		.ie8 & {@content;}
	}@else if $device == tab {
	//tab
		@media only screen and (min-width: $bp_sp + 1) and (max-width: $bp_tab){@content;}
	}@else if $device == tab_l {
	//tab_l
		@media only screen and (min-width: ($bp_tab - $bp_sp) / 2 + $bp_sp + 1) and (max-width: $bp_tab){@content;}
	}@else if $device == tab_s {
	//tab_s
		@media only screen and (min-width: $bp_sp + 1) and (max-width: ($bp_tab - $bp_sp) / 2 + $bp_sp){@content;}
	}@else if $device == sp {
	//sp
		@media only screen and (max-width: $bp_sp){@content;}
	}@else if $device == sp_l {
	//sp_l
		@media only screen and (min-width: ($bp_sp - 320) / 2 + 320+ 1) and (max-width: $bp_sp){@content;}
	}@else if $device == sp_s {
	//sp_s
		@media only screen and (max-width: ($bp_sp - 320) / 2 + 320){@content;}
	}@else if $device == pc_tab {
	//pc & tab
		@media only screen and (min-width: $bp_sp + 1){@content;}
		@media print {@content;}
		.ie8 & {@content;}
	}@else if $device == tab_sp {
	//tab & sp
		@media only screen and (max-width: $bp_tab){@content;}
	}@else if $device == min_w {
	//max-width
		@media only screen and (min-width: $val){@content;}
		@media print {@content;}
		.ie8 & {@content;}
	}@else if $device == max_w {
	//min-width
		@media only screen and (max-width: $val){@content;}
		@if $val > $bp_tab {
			@media print {@content;}
			.ie8 & {@content;}
		}
	}@else if $device == min_max_w {
	//min-width ~ max-width
		@media only screen and (min-width: $val) and (max-width: $val2){@content;}
		@if $val2 > $bp_tab {
			@media print {@content;}
			.ie8 & {@content;}
		}
	}@else if $device == min_h {
	//max-height
		@media only screen and (min-height: $val){@content;}
	}@else if $device == max_h {
	//min-height
		@media only screen and (max-height: $val){@content;}
	}@else if $device == min_max_h {
	//min-height ~ max-height
		@media only screen and (min-height: $val) and (max-height: $val2){@content;}
	}
}


//----------------------------------------------//
// *Variable									//
//----------------------------------------------//

// メインカラム
$columnWidth: 1200;

// フォントのベースサイズ
$baseSize: 14;

// フォントのベーカラー
$baseColor: #222222;
$montser: 'Montserrat', sans-serif;

//----------------------------------------------//
// *Placeholder									//
//----------------------------------------------//

// コンテンツ幅 - baceWidth
%bw {
	max-width: $columnWidth + px;
	margin: auto;
	@include mq(min_max_w,1025px,1200px) {
		width: 95%;
	}
	@include mq(tab_sp) {
		width: 95%;
	}
}

// クリアフィックス - clearFix
%cf {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}


//----------------------------------------------//
// *Function									//
//----------------------------------------------//

// %計算
@function wCon($width,$parentWidth:$columnWidth) {
	@return $width / $parentWidth * 100%;
}


//----------------------------------------------//
// *mixin										//
//----------------------------------------------//

// フォントサイズ
// @include fsz(任意のサイズ,親要素のサイズ); ※px不要
@mixin fsz($size:$baseSize,$parent:null){
	$i: $size * (100 / $baseSize);

	@if $parent == null {
		font-size: ceil($i * 1%);
	}@else {
		font-size: ceil(100% * ($size / $parent));
	}
}

// 値を振り分け - choiceValue
// @include cV(プロパティ,pc幅,tab~sp幅); or @include cV(プロパティ,pc幅,tab幅,sp幅);
@mixin cV($pro, $v1:0, $v2:0, $v3:null) {
	#{$pro} : $v1;
	@if $v3 == null {
		@include mq(sp) {
			#{$pro} : $v2;
		}
	}@else {
		@include mq(tab) {
			#{$pro} : $v2;
		}
		@include mq(sp) {
			#{$pro} : $v3;
		}
	}
}

// ホバー
// @include hover {
//		style
// }
@mixin hover() {
	.mouse &:hover,
	.touch &.touchstart {
		@content;
	}
	.touch & {
		-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
		&.touchend {
			@include transition-delay(200ms);
		}
	}
}

// 幅を決めて中央寄せ - choiceWidth
// @include cW(任意の幅px);
@mixin cW($width) {
	max-width: $width;
	width: 95%;
	margin: auto;
}

// 画像を拡大
// @include zoomImg(拡大率,x軸基点);
@mixin zoomImg($mag:140%,$cri:center) {
	overflow: hidden;
	img {
		position: relative;
		width: $mag;
		max-width: none;
		@if $cri == center {
			margin-left: - ($mag - 100) / 2;
		}
		@if $cri == right {
			margin-left: - ($mag - 100);
		}
	}
}

// リンクの下線を逆にする
// @include reverseDecoration;
@mixin reverseDecoration {
	text-decoration: none !important;
	@include hover {
		text-decoration: underline !important;
	}
}

// 縦方向のグラデーション(IE8対応)
// @include gradient(上側のカラー,下側のカラー);
@mixin gradient($c1:#000, $c2:#fff) {
	@include background(linear-gradient($c1,$c2));
	@include filter-gradient($c1,$c2);
}

//Keyframes srcoll
@include keyframes(srcoll) {
  0% {
    @include transform(translate(0, 0));
  }
  50% {
    @include transform(translate(0, -10px));
  }
  100% {
    @include transform(translate(0, 0));
  }
}
/* -----------------------------------------------------------
	SLICK SLIDER
----------------------------------------------------------- */
//@include dots(#color1,#color2,width);
@mixin dots($clrActive:#000,$clrNormal:#FFF,$width:15px,$pos:center) {	
	text-align: right;
	bottom: 4.5%;	
	z-index: 1;
	width: auto;
	position: absolute;
	@if $pos == left {
		left: 2%;
	}
	@if $pos == center {
		left: 50%;
		@include transform(translate(-50%,0));
	}
	@if $pos == right {
		right: 2%;
	}	
	@include mq(tab_sp) {
		bottom: 8%;		
	}	
	li{
		position: relative;
		width: $width;
		height: 0;
		padding-top: $width;
		margin: 0;
		display: inline-block;
		border-radius: 50%;
		overflow: hidden;
		@include transition(background 300ms);
		background: $clrNormal;
		&:not(.slick-active) {
			button {
				cursor: pointer;
			}
			@include hover {
				background: mix($clrNormal,$clrActive);
			}
		}
		&:not(:first-child) {
			@include cV(margin-left,1em,.7em);
		}		
		&.slick-active{
			background-color: $clrActive;
		}
		@include mq(sp) {
			width: .7em;
			padding-top: .7em;
		}
		button{
			position: absolute;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			opacity: 0;
			margin: 0;
			padding: 0;
		}
	}
}

//@include btn_slider(#color1,#color2,size);
@mixin btn_slider($clr:#FFF,$bg_btn:#000,$wid:normal) {
	position: absolute;
	bottom: 20%;	
	z-index: 99;
	@include fsz(40);
	text-align: center;
	color: $clr;
	@include transform(translate(0,-30%));
	@include transition(background 300ms);
	@include mq(tab_sp) {
		@include fsz(28);
	}
	@if $wid == small {
		padding: 0em .3em;
	}
	@if $wid == normal {
		padding: .1em .5em;
	}
	@if $wid == big {
		padding: 1em 2em;
	}	
	&.slick-next{
		right: 0;
		&:before{
			content: url(../images/btn_next.png);
		}		
	}
	&.slick-prev{
		left: 0;
		&:before{
			content: url(../images/btn_prev.png);
		}		
	}
	&:hover{
		cursor: pointer;
		@include opacity(0.7);
		filter: alpha(opacity=700);;
	}
}